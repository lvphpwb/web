<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>LVPHP</title>
  
  <link href="/atom.xml" rel="self"/>
  
  <link href="http://www.lvphp.com/"/>
  <updated>2016-12-03T04:05:28.217Z</updated>
  <id>http://www.lvphp.com/</id>
  
  <author>
    <name>lvphpwb</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>php file_get_contents</title>
    <link href="http://www.lvphp.com/2016/12/03/file-get-contents/"/>
    <id>http://www.lvphp.com/2016/12/03/file-get-contents/</id>
    <published>2016-12-03T04:03:04.000Z</published>
    <updated>2016-12-03T04:05:28.217Z</updated>
    
    <content type="html"><![CDATA[<h4 id="使用file-get-contents发送post请求"><a href="#使用file-get-contents发送post请求" class="headerlink" title="使用file_get_contents发送post请求"></a>使用file_get_contents发送post请求</h4><figure class="highlight php"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div></pre></td><td class="code"><pre><div class="line">$data = [<span class="string">'eat'</span>=&gt;<span class="string">'2kg'</span>,<span class="string">'run'</span>=&gt;<span class="string">'10km'</span>];</div><div class="line">$url = <span class="string">'http://localhost'</span>;</div><div class="line">$context = stream_context_create(<span class="keyword">array</span>(</div><div class="line">    <span class="string">'http'</span> =&gt; <span class="keyword">array</span>( 　　</div><div class="line">        <span class="string">'method'</span> =&gt; <span class="string">'POST'</span>, 　　</div><div class="line">        <span class="string">'header'</span> =&gt; <span class="string">'Content-type:application/x-www-form-urlencoded'</span>, 　　</div><div class="line">        <span class="string">'content'</span> =&gt; html_build_query($info), 　　</div><div class="line">        <span class="string">'timeout'</span> =&gt; <span class="number">3</span></div><div class="line">    )</div><div class="line">));</div><div class="line">$result = file_get_contents($url, <span class="keyword">false</span>, $context);</div></pre></td></tr></table></figure>
]]></content>
    
    <summary type="html">
    
      &lt;h4 id=&quot;使用file-get-contents发送post请求&quot;&gt;&lt;a href=&quot;#使用file-get-contents发送post请求&quot; class=&quot;headerlink&quot; title=&quot;使用file_get_contents发送post请求&quot;&gt;&lt;/a&gt;使用fil
    
    </summary>
    
    
      <category term="php" scheme="http://www.lvphp.com/tags/php/"/>
    
      <category term="file_get_contents" scheme="http://www.lvphp.com/tags/file-get-contents/"/>
    
  </entry>
  
  <entry>
    <title>微信JS SDK</title>
    <link href="http://www.lvphp.com/2016/12/03/weixin-sdk/"/>
    <id>http://www.lvphp.com/2016/12/03/weixin-sdk/</id>
    <published>2016-12-03T03:17:56.000Z</published>
    <updated>2016-12-03T03:46:48.366Z</updated>
    
    <content type="html"><![CDATA[<h4 id="引入微信JS文件"><a href="#引入微信JS文件" class="headerlink" title="引入微信JS文件"></a>引入微信JS文件</h4><figure class="highlight js"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">&lt;script type=<span class="string">"text/javascript"</span> src=<span class="string">"https://res.wx.qq.com/open/js/jweixin-1.1.0.js"</span>&gt;&lt;/script&gt;</div></pre></td></tr></table></figure>
<h4 id="获取access-token"><a href="#获取access-token" class="headerlink" title="获取access_token"></a>获取access_token</h4><figure class="highlight php"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$access_info = file_get_contents(<span class="string">"https://api.weixin.qq.com/cgi-bin/token?grant_type=client_credential&amp;appid=APPID&amp;secret=APPSECRET"</span>);</div></pre></td></tr></table></figure>
<p>正常情况下，微信会返回下述JSON数据包给公众号：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">&#123;&quot;access_token&quot;:&quot;ACCESS_TOKEN&quot;,&quot;expires_in&quot;:7200&#125;</div></pre></td></tr></table></figure></p>
<p>错误时微信会返回错误码等信息，JSON数据包示例如下（该示例为AppID无效错误）:<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">&#123;&quot;errcode&quot;:40013,&quot;errmsg&quot;:&quot;invalid appid&quot;&#125;</div></pre></td></tr></table></figure></p>
<p><strong>注意</strong><br>获取access_token有频次限制，获取的access_token需要在做缓存  </p>
<h4 id="获取jsapi-ticket"><a href="#获取jsapi-ticket" class="headerlink" title="获取jsapi_ticket"></a>获取jsapi_ticket</h4><figure class="highlight php"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ticket_info = file_get_contents(<span class="string">"https://api.weixin.qq.com/cgi-bin/ticket/getticket?access_token=ACCESS_TOKEN&amp;type=jsapi"</span>);</div></pre></td></tr></table></figure>
<p>成功返回如下JSON：<br><figure class="highlight js"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div></pre></td><td class="code"><pre><div class="line">&#123;</div><div class="line"><span class="string">"errcode"</span>:<span class="number">0</span>,</div><div class="line"><span class="string">"errmsg"</span>:<span class="string">"ok"</span>,</div><div class="line"><span class="string">"ticket"</span>:<span class="string">"bxLdikRXVbTPdHSM05e5u5sUoXNKd8-41ZO3MhKoyN5OfkWITDGgnr2fwJ0m9E8NYzWKVZvdVtaUgWvsdshFKA"</span>,</div><div class="line"><span class="string">"expires_in"</span>:<span class="number">7200</span></div><div class="line">&#125;</div></pre></td></tr></table></figure></p>
<p><strong>注意</strong><br>获取jsapi_ticket有频次限制，获取的jsapi_ticket需要在做缓存</p>
<h4 id="计算签名"><a href="#计算签名" class="headerlink" title="计算签名"></a>计算签名</h4><figure class="highlight php"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$signature = sha1(<span class="string">"jsapi_ticket=sM4AOVdWfPE4DxkXGEs8VMCPGGVi4C3VM0P37wVUCFvkVAy_90u5h9nbSlYy3-Sl-HhTdfl2fzFy1AOcHKP7qg&amp;noncestr=Wm3WZYTPz0wzccnW&amp;timestamp=1414587457&amp;url=http://mp.weixin.qq.com?params=value"</span>)</div></pre></td></tr></table></figure>
<ul>
<li>jsapi_ticket: 获取的jsapi_ticket</li>
<li>noncestr: 随机串</li>
<li>timestamp: 时间戳</li>
<li>url: 当前网页的URL，不包含#及其后面部分</li>
</ul>
<h4 id="调用SDK"><a href="#调用SDK" class="headerlink" title="调用SDK"></a>调用SDK</h4><figure class="highlight js"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div></pre></td><td class="code"><pre><div class="line">wx.config(&#123;</div><div class="line">    <span class="attr">debug</span>: <span class="literal">true</span>, <span class="comment">// 开启调试模式,调用的所有api的返回值会在客户端alert出来，若要查看传入的参数，可以在pc端打开，参数信息会通过log打出，仅在pc端时才会打印。</span></div><div class="line">    appId: <span class="string">'wx1a1bba241ca4cce5'</span>, <span class="comment">// 必填，公众号的唯一标识</span></div><div class="line">    timestamp: <span class="number">1428980719</span>, <span class="comment">// 必填，生成签名的时间戳</span></div><div class="line">    nonceStr: <span class="string">'Wm3WZYTPz0wzccnW'</span>, <span class="comment">// 必填，生成签名的随机串</span></div><div class="line">    signature: <span class="string">'2c3b0863b61fe7cc37961d7ce3ce71dc1d7360a8'</span>,<span class="comment">// 必填，签名，见附录1</span></div><div class="line">    jsApiList: [<span class="string">"previewImage"</span>] <span class="comment">// 必填，需要使用的JS接口列表，所有JS接口列表见附录2</span></div><div class="line">&#125;);</div><div class="line">wx.ready(<span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</div><div class="line">    $(<span class="string">".img"</span>).click(<span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</div><div class="line">        wx.previewImage(&#123;</div><div class="line">            <span class="attr">current</span>: <span class="string">'http://apps.sinaapp.com/app/screen.jpeg'</span>, <span class="comment">// 当前显示的图片链接</span></div><div class="line">            urls: [<span class="string">'http://apps.sinaapp.com/app/link.png'</span>, <span class="string">'http://apps.sinaapp.com/app/search.png'</span>, <span class="string">'http://apps.sinaapp.com/app/searchn.png'</span>] <span class="comment">// 需要预览的图片链接列表</span></div><div class="line">        &#125;);</div><div class="line">    &#125;);</div><div class="line">&#125;);</div></pre></td></tr></table></figure>
]]></content>
    
    <summary type="html">
    
      &lt;h4 id=&quot;引入微信JS文件&quot;&gt;&lt;a href=&quot;#引入微信JS文件&quot; class=&quot;headerlink&quot; title=&quot;引入微信JS文件&quot;&gt;&lt;/a&gt;引入微信JS文件&lt;/h4&gt;&lt;figure class=&quot;highlight js&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class
    
    </summary>
    
    
      <category term="js" scheme="http://www.lvphp.com/tags/js/"/>
    
      <category term="微信" scheme="http://www.lvphp.com/tags/%E5%BE%AE%E4%BF%A1/"/>
    
      <category term="weixin" scheme="http://www.lvphp.com/tags/weixin/"/>
    
      <category term="sdk" scheme="http://www.lvphp.com/tags/sdk/"/>
    
  </entry>
  
  <entry>
    <title>ES6-info</title>
    <link href="http://www.lvphp.com/2016/12/02/es6-info/"/>
    <id>http://www.lvphp.com/2016/12/02/es6-info/</id>
    <published>2016-12-02T10:15:38.000Z</published>
    <updated>2016-12-02T14:54:39.681Z</updated>
    
    <content type="html"><![CDATA[<h4 id="使用拓展运算符-…-复制数组"><a href="#使用拓展运算符-…-复制数组" class="headerlink" title="使用拓展运算符 … 复制数组"></a>使用拓展运算符 … 复制数组</h4><figure class="highlight js"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div></pre></td><td class="code"><pre><div class="line"><span class="meta">"use strict"</span></div><div class="line"><span class="keyword">const</span> items = [<span class="number">1</span>,<span class="number">2</span>,<span class="number">3</span>,<span class="number">4</span>]</div><div class="line"><span class="keyword">const</span> itemscopy = [...items]</div><div class="line"><span class="built_in">console</span>.log(itemscopy); <span class="comment">//note out: [ 1, 2, 3, 4 ]</span></div><div class="line">itemscopy[<span class="number">0</span>] = <span class="number">6</span>;</div><div class="line"><span class="built_in">console</span>.log(items, itemscopy); <span class="comment">//note out: [ 1, 2, 3, 4 ] [ 6, 2, 3, 4 ]</span></div></pre></td></tr></table></figure>
<h4 id="使用解构存取和使用多属性对象"><a href="#使用解构存取和使用多属性对象" class="headerlink" title="使用解构存取和使用多属性对象"></a>使用解构存取和使用多属性对象</h4><figure class="highlight js"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div></pre></td><td class="code"><pre><div class="line"><span class="meta">"use strict"</span></div><div class="line"><span class="function"><span class="keyword">function</span> <span class="title">getFullName</span>(<span class="params">obj</span>) </span>&#123;</div><div class="line">    <span class="keyword">const</span> &#123; firstName, lastName &#125; = obj;</div><div class="line">    <span class="keyword">return</span> <span class="string">`<span class="subst">$&#123;firstName&#125;</span> <span class="subst">$&#123;lastName&#125;</span>`</span>;</div><div class="line">&#125;</div><div class="line"></div><div class="line"><span class="keyword">let</span> str = getFullName(&#123;<span class="attr">firstName</span>:<span class="string">"wangbo"</span>, <span class="attr">lastName</span>:<span class="string">"bo"</span>, <span class="attr">age</span>:<span class="number">30</span>&#125;);</div><div class="line"><span class="built_in">console</span>.log(str); <span class="comment">//note out: wangbo bo</span></div></pre></td></tr></table></figure>
<h4 id="对数组使用解构赋值"><a href="#对数组使用解构赋值" class="headerlink" title="对数组使用解构赋值"></a>对数组使用解构赋值</h4><figure class="highlight js"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line"><span class="meta">"use strict"</span></div><div class="line"><span class="keyword">const</span> arr = [<span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>, <span class="number">4</span>];</div><div class="line"><span class="keyword">const</span> [first, second] = arr;</div><div class="line"><span class="built_in">console</span>.log(first, second); <span class="comment">//note out: 1 2</span></div></pre></td></tr></table></figure>
<h4 id="需要回传多个值时，使用对象解构，而不是数组解构"><a href="#需要回传多个值时，使用对象解构，而不是数组解构" class="headerlink" title="需要回传多个值时，使用对象解构，而不是数组解构"></a>需要回传多个值时，使用对象解构，而不是数组解构</h4><figure class="highlight js"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div></pre></td><td class="code"><pre><div class="line"><span class="meta">"use strict"</span></div><div class="line"><span class="function"><span class="keyword">function</span> <span class="title">processInput</span>(<span class="params"></span>) </span>&#123;</div><div class="line">    <span class="keyword">return</span> &#123;<span class="attr">left</span>: <span class="number">10</span>, <span class="attr">right</span>: <span class="number">20</span>, <span class="attr">top</span>: <span class="number">30</span>, <span class="attr">bottom</span>: <span class="number">40</span>&#125;;</div><div class="line">&#125;</div><div class="line"><span class="keyword">const</span> &#123; top, left &#125; = processInput();</div><div class="line"><span class="built_in">console</span>.log(top, left); <span class="comment">//note out: 30 10</span></div></pre></td></tr></table></figure>
<h4 id="程序化生成字符串时，使用模板字符串代替字符串连接"><a href="#程序化生成字符串时，使用模板字符串代替字符串连接" class="headerlink" title="程序化生成字符串时，使用模板字符串代替字符串连接"></a>程序化生成字符串时，使用模板字符串代替字符串连接</h4><figure class="highlight js"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div></pre></td><td class="code"><pre><div class="line"><span class="meta">"use strict"</span></div><div class="line"><span class="function"><span class="keyword">function</span> <span class="title">sayHi</span>(<span class="params">name</span>) </span>&#123;</div><div class="line">    <span class="keyword">return</span> <span class="string">`How are you, <span class="subst">$&#123;name&#125;</span>?`</span>;</div><div class="line">&#125;</div><div class="line"><span class="keyword">const</span> str = sayHi(<span class="string">"wangbo"</span>);</div><div class="line"><span class="built_in">console</span>.log(str); <span class="comment">//note out: How are you, wangbo?</span></div></pre></td></tr></table></figure>
<h4 id="函数的参数指定默认值"><a href="#函数的参数指定默认值" class="headerlink" title="函数的参数指定默认值"></a>函数的参数指定默认值</h4><figure class="highlight js"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line"><span class="meta">"use strict"</span></div><div class="line"><span class="function"><span class="keyword">function</span> <span class="title">handleThings</span>(<span class="params">opts = &#123;&#125;</span>) </span>&#123;</div><div class="line"></div><div class="line">&#125;</div></pre></td></tr></table></figure>
<h4 id="使用箭头函数符号"><a href="#使用箭头函数符号" class="headerlink" title="使用箭头函数符号"></a>使用箭头函数符号</h4><figure class="highlight js"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div></pre></td><td class="code"><pre><div class="line"><span class="meta">"use strict"</span></div><div class="line"><span class="keyword">const</span> items = [<span class="number">1</span>,<span class="number">2</span>,<span class="number">3</span>,<span class="number">4</span>];</div><div class="line"><span class="keyword">let</span> tmp = items.map(<span class="function">(<span class="params">x</span>)=&gt;</span>&#123;<span class="keyword">return</span> x*x;&#125;);</div><div class="line"><span class="built_in">console</span>.log(tmp); <span class="comment">//note out: [ 1, 4, 9, 16 ]</span></div><div class="line"><span class="keyword">let</span> arr = items.map(<span class="function"><span class="params">x</span> =&gt;</span> x * x);</div><div class="line"><span class="built_in">console</span>.log(arr); <span class="comment">//note out: [ 1, 4, 9, 16 ]</span></div></pre></td></tr></table></figure>
]]></content>
    
    <summary type="html">
    
      &lt;h4 id=&quot;使用拓展运算符-…-复制数组&quot;&gt;&lt;a href=&quot;#使用拓展运算符-…-复制数组&quot; class=&quot;headerlink&quot; title=&quot;使用拓展运算符 … 复制数组&quot;&gt;&lt;/a&gt;使用拓展运算符 … 复制数组&lt;/h4&gt;&lt;figure class=&quot;highlight 
    
    </summary>
    
    
      <category term="js" scheme="http://www.lvphp.com/tags/js/"/>
    
      <category term="es6" scheme="http://www.lvphp.com/tags/es6/"/>
    
  </entry>
  
  <entry>
    <title>git-stash</title>
    <link href="http://www.lvphp.com/2016/12/02/git-stash/"/>
    <id>http://www.lvphp.com/2016/12/02/git-stash/</id>
    <published>2016-12-02T10:02:38.000Z</published>
    <updated>2016-12-02T10:08:48.372Z</updated>
    
    <content type="html"><![CDATA[<h4 id="应用场合"><a href="#应用场合" class="headerlink" title="应用场合"></a>应用场合</h4><p>branch_A分支的工作区内容已被修改，但是并未完成。这时需要立即切换到另外一个分支branch_B上去，可是又不想提交目前的修改，因为修改没有完成。但是，不提交的话，又没有办法checkout到前面的分支。<br>此时用Git Stash就相当于备份工作区了。然后再Checkout到branch_B去修改，就能够达到保存当前工作区被修改过的内容，并及时恢复的作用。</p>
<h4 id="用法"><a href="#用法" class="headerlink" title="用法"></a>用法</h4><ul>
<li>git stash 备份当前的工作区的内容，从最近的一次提交中读取相关内容，让工作区保证和上次提交的内容一致。同时，将当前的工作区内容保存到Git栈中;</li>
<li>git stash apply 把栈里面记录的内容运用到当前的版本上，这时候栈里面的记录还保存着;</li>
<li>git stash pop 从Git栈中读取最近一次保存的内容，恢复工作区的相关内容。由于可能存在多个Stash的内容，所以用栈来管理，pop会从最近的一个stash中读取内容并恢复， pop后栈中不再存在该记录;</li>
<li>git stash list 显示Git栈内的所有备份，可以利用这个列表来决定从那个地方恢复;</li>
<li>git stash clear 清空Git栈,此时使用gitg等图形化工具会发现，原来stash的哪些节点都消失了;</li>
</ul>
<h4 id="注意"><a href="#注意" class="headerlink" title="注意"></a>注意</h4><p>在不同分支执行git stash 命令会将修改保存在同一个栈中，<br><strong>例如</strong></p>
<ol>
<li>在copy_master分支执行 git stash, 这时候stash 栈中有一个stash@{0}  </li>
<li>在sonar分支执行 git stash, 这时候stash 栈中会再放进一个stash@{1}  </li>
<li>执行git stash list命令，输出：<br>stash@{0}: WIP on copy_master: 2923b6d Merge branch ‘master’ into copy_master<br>stash@{1}: WIP on sonar: c2c677b Merge branch ‘master’ into sonar  </li>
</ol>
]]></content>
    
    <summary type="html">
    
      &lt;h4 id=&quot;应用场合&quot;&gt;&lt;a href=&quot;#应用场合&quot; class=&quot;headerlink&quot; title=&quot;应用场合&quot;&gt;&lt;/a&gt;应用场合&lt;/h4&gt;&lt;p&gt;branch_A分支的工作区内容已被修改，但是并未完成。这时需要立即切换到另外一个分支branch_B上去，可是又不想提交目
    
    </summary>
    
    
      <category term="git" scheme="http://www.lvphp.com/tags/git/"/>
    
      <category term="git-stash" scheme="http://www.lvphp.com/tags/git-stash/"/>
    
  </entry>
  
  <entry>
    <title>初试Hexo</title>
    <link href="http://www.lvphp.com/2016/11/24/hello-world/"/>
    <id>http://www.lvphp.com/2016/11/24/hello-world/</id>
    <published>2016-11-24T08:48:21.879Z</published>
    <updated>2016-12-02T09:58:50.683Z</updated>
    
    <content type="html"><![CDATA[<p>Hexo官网网站：<a href="https://hexo.io/" target="_blank" rel="external">Hexo</a>，文档：<a href="https://hexo.io/docs/" target="_blank" rel="external">documentation</a></p>
<h2 id="使用命令"><a href="#使用命令" class="headerlink" title="使用命令"></a>使用命令</h2><h3 id="创建新文章"><a href="#创建新文章" class="headerlink" title="创建新文章"></a>创建新文章</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ hexo new  name</div></pre></td></tr></table></figure>
<h3 id="本地预览"><a href="#本地预览" class="headerlink" title="本地预览"></a>本地预览</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ hexo server</div></pre></td></tr></table></figure>
<h3 id="生成静态文件"><a href="#生成静态文件" class="headerlink" title="生成静态文件"></a>生成静态文件</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ hexo generate</div></pre></td></tr></table></figure>
<h3 id="发布"><a href="#发布" class="headerlink" title="发布"></a>发布</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ hexo deploy</div></pre></td></tr></table></figure>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;Hexo官网网站：&lt;a href=&quot;https://hexo.io/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Hexo&lt;/a&gt;，文档：&lt;a href=&quot;https://hexo.io/docs/&quot; target=&quot;_blank&quot; rel=&quot;exter
    
    </summary>
    
    
      <category term="hexo" scheme="http://www.lvphp.com/tags/hexo/"/>
    
  </entry>
  
</feed>
